# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Deploy dev branch

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]



jobs:
  update-docker-image-push-to-hub:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    # set up java
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # set up application file
    - name: Create application.properties
      run: |
        mkdir -p ./src/main/resources
        cd ./src/main/resources
        echo "${{ secrets.APPLICATION }}" >> ./application.properties

    # gradle grant execution permission and build project
    - name: Setup Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew clean build

    # login dockerhub
    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # build Docker image
    - name: docker image build
      run: sudo docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/knowckknowck-backend .

    # push docker image
    - name: docker Hub push
      run: sudo docker push ${{ secrets.DOCKERHUB_USERNAME }}/knowckknowck-backend

  
  
  # run docker image
  run-docker-image-on-server:
    runs-on: ubuntu-latest
    needs: update-docker-image-push-to-hub

    steps:
    - name: Deploy Docker image
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/knowckknowck-backend
          sudo docker stop $(sudo docker ps -q) 2>/dev/null || true
          sudo docker run --name knowckknowck-backend -d -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/knowckknowck-backend
          sudo docker system prune -f
