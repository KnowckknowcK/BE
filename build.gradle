plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.10'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.knu'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

	//database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'com.mysql:mysql-connector-j'
	implementation 'com.h2database:h2'

	//thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	//graphQL
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.graphql:spring-graphql-test'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
  
  	//websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	//webflux(chatgpt 비동기 호출)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//oauth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//smtp
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//retry
	implementation 'org.springframework.retry:spring-retry'

	//aws s3
	implementation 'io.awspring.cloud:spring-cloud-aws-s3:3.0.2'

	//batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'

}
tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
